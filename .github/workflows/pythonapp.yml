# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: GAtest
env:
  APPLICATION_NAME   : "MyFlask"
  DEPLOY_PACKAGE_NAME: "Flask-deploy-ver-${{ github.sha }}"

on:
  push:
    branches: 
      - master

jobs:
  my_testing:

    runs-on: ubuntu-latest
    steps:
      - name: Print Hello Message in Testing
        run: echo "Hello World from Testing job"
        
      - name: Execute few commands
        run: |
          echo "Hello message1"
          echo "Hello message2"
          echo "Application name: ${{ env.APPLICATION_NAME }}"
      - name: List current folder
        run: ls -la
        
      - name: Git clone my repo
        uses: actions/checkout@v1
      
      - name: List current folder
        run: ls -la
    

  my_deploy:
    runs-on: ubuntu-latest
    needs: [my_testing]
    env: 
      VAR1: "This is job variable 1"
      VAR2: "This is job variable 2"
    
    steps:
      - name: Print Hello Message in Deploy
        run: echo "Hello World from Deploy job"
      - name: Print env vars
        run : |
          echo "Var1 = ${{ env.VAR1 }}"
          echo "Var2 = ${{ env.VAR2 }}"
          echo "SuperLocalVar = $LOCALVAR"
        env:
          LOCALVAR: "This is superlocal variable"
        
      - name: Printing Deployment package
        run: echo "Deploy package name is ${{ env.DEPLOY_PACKAGE_NAME }}"
        
      - name: Let's test some packages if they're here 1
        run: aws --version
        
      - name: Let's test some packages if they're here 2
        run: zip --version
  build:

    runs-on: windows
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pytest
